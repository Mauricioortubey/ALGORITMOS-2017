// Algoritmos prueba.cpp: define el punto de entrada de la aplicaciÃ³n de consola.
//

//Generar registros aleatorios con una funcion numerica PIN que se almacene y compare con los otros registros.
//

#include "stdafx.h"
#include <iostream>
#include "conio.h"
#include <string>
#include <ctime>
#include <windows.h>
#include <sstream>
#include <fstream>

#define MAX 500
#define USER "UPSA"
#define PASS "UPSA"


using namespace std;

struct Usuario_ContraseÃ±a_Asegurado{ // Estructura para el registro de usuario y contraseÃ±a para cada persona.
	string Usuario_C; // Variable de tipo string donde se define el nombre de usuario.
	string Password_C; // Variable de tipo string que almacena la contraseÃ±a. (Solo para el proceso de registro)
};
struct Datos_Paciente{ // Estructura de Datos visibles del Cliente/Asegurado.
	int Registro; // Con el numero de registro se tendra un control del numero de asegurado o cliente
	string Nombre; // Variable de tipo string donde se almacenarÃ¡ el o los nombre(s)
	string Apellido; // Variable de tipo string donde se almacenarÃ¡ los apellidos.
	int Edad; // Variable de tipo int donde se almacenarÃ¡ la edad del paciente ( segun su Fecha de Nacimiento)
};
struct Datos_Adicionales{ // Estructura de Datos de caracter PERSONAL del cliente/Asegurado.
	string Centro_Trabajo_Estudio; // Variable de tipo string donde se define la ocupacion del cliente/asegurado
	int Nro_Historia_Clinica; // Variable de tipo int que almacena el numero de historia clinica
	string Direccion; // Variable de tipo string que almacena la direccion del cliente.
	string Correo_Electronico; // Variable de tipo string que almacena el correo electronico.
	string Telefono;//Variable de tipo string que almacena el telefono fijo.
	string Celular;//Variable de tipo string que almacena el Celular.
	string Carnet;//Variable de tipo string que almacena el carnet de identidad.
	string EXP; // Variable de tipo string donde almacena donde fue expedido el carnet.
};
struct Historial_Clinico{ // Estructura de Datos para almacenar datos de quien asiste al paciente (Se utilizarÃ¡ en el struct del H.C.)
	int NroTrabajor; //Numero de trabajor por donde se podra ver posteriormente un historial de quienes ha atentido.
	string Doctor; //Variablede tipo string que almacenarÃ¡ el nombre del doctor.
	string Especialidad; // Variable de tipo string donde se almacenarÃ¡ la especialidad del doctor.
	string Fecha_Atencion;// Variable de tipo string donde se almacenarÃ¡ la fecha.
	string Hora;//Variable de tipo string donde se almacenarÃ¡ la hora en que fue 
	string Tipo_de_Emergencia;//Variable de tipo string donde se detallarÃ¡ el motivo de la emergencia.
	string blood; //Tipo de sangre del clientre
	string Medicamento_Recetado; //medicamentos que consume el cliente
	string  Alergias; //Diferentes alergias que tiene el cliente
	string Patologias; //Diferentes problemas patologicos
	string No_Patologias; //Diferentes problemas no patologicos;
	string PEEA; //Anotar los sintomas actuales que siente el cliente;
};

//FILE *USUARIOS_Y_PASSWORDS, *DATOS_PERSONALES;

ofstream Guardar("Fichero para Asegurados.txt",ios::in| ios::app );//Manejo de Archivos para almacenar los datos de los Clientes.

//PROTOTIPOS:
void Acceder_Cuenta_P();
void Crear_Usuarios(Usuario_ContraseÃ±a_Asegurado User[],int Reg);
void Datos_Personales(Datos_Paciente User_Datos[],int Reg);
void Datos_Extras(Datos_Adicionales User_AdDatos[],int Reg);
void Mostrar_Usuario(Usuario_ContraseÃ±a_Asegurado User[],Datos_Paciente User_Datos[],Datos_Adicionales User_AdDatos[],int cod);

void main()
{
	
	int opcion,Reg=0;//HTReg â†’ numero de historial medico.
	Usuario_ContraseÃ±a_Asegurado User[MAX];
	Datos_Paciente User_Datos[MAX];
	Datos_Adicionales User_AdDatos[MAX];
	Historial_Clinico User_HC[MAX];
	bool menu = true;

	Acceder_Cuenta_P();
	
	//MENU:
	while(menu == true){
		system("cls");
		cout<<"1: Crear Usuarios."<<endl;
		cout<<"2: Buscar Usuarios."<<endl;
		cout<<"3: Editar"<<endl;
		cout<<"4: Ver Historial"<<endl;
		cout<<"5: Salir"<<endl;
		cout<<"Ingrese Opcion: ";
		cin>>opcion;
		switch(opcion){
			case 1:
				{	system("cls");
					Crear_Usuarios(User,Reg);
					Datos_Personales(User_Datos,Reg);
					Datos_Extras(User_AdDatos,Reg);
					Reg++;
					break;
				}
			case 2:
				{
					system("cls");
					int codigo;
					cout<<"Ingrese el codigo del usuario para ver su datos."<<endl;
					cin>>codigo;
					ifstream ("Fichero para Asegurados.txt");
					Mostrar_Usuario(User,User_Datos,User_AdDatos,codigo);
					break;

				}

			case 5:
				{
					system("cls");
					menu=false;
					int seg = 5;
					while(seg<=5){
					cout<<"\n\t Cerrando Sesion. Por favor Espere: "<<seg<<" segundos."<<endl;
					Sleep(1000);//1 segundo
					seg--;
					system("cls");
					if(seg==0){break;}
					}
					cout<<"Presione Enter."<<endl;
					break;
				}
			}
		}

	_getch();
}

void Acceder_Cuenta_P()
{
	string U,P;
	int intentos = 0,seg=1;
	bool ingresa = false;
	do{
		system("cls");
		do{
			system("cls");
		cout<<"\t\t\t LOGIN DE USUARIO"<<endl;
		cout<<"\t\t\t-----------------"<<endl;
		cout<<"\n\t Usuario: ";
		getline(cin, U);
		cout<<"\n\t Password: ";
		getline(cin, P);
	
		if(U==USER && P==PASS){
			ingresa = true;
		} else {
			system("cls");
			cout<<"El Usuario y/o Password son incorrectos."<<endl;
			intentos++;
		}
		}while(ingresa == false && intentos < 3);

		if (ingresa == false){
			cout<<"Usted no pudo ingresar al sistema."<<endl;
			while(seg<5){
			cout<<"\n\t Por favor Espere: "<<seg<<" segundos y vuelva a intentar."<<endl;
			Sleep(1000);//1 segundo
			seg++;
			system("cls");
			}
		} else {
			cout<<"\n\t Bienvenido al sistema! "<<endl;
			ingresa = true;
		}
	}while(ingresa == false);
}

void Crear_Usuarios(Usuario_ContraseÃ±a_Asegurado User[],int Reg)
{system("cls");
	bool Aceptado = true;
	cin.ignore();
	cout<<"Crea un Usuario: ";
	getline(cin,User[Reg].Usuario_C);

	if(Reg>1)
	{	for(int i=0;i<=Reg;i++)
			{for(int j=i+1;j<=Reg;j++)
				{if(User[i].Usuario_C==User[j].Usuario_C)
					{cout<<"El usuario ya existe. Intente nuevamente."<<endl;
					 Aceptado = false;
					}
				}
			}
	}else{
	Guardar<<"ID: "<<User[Reg].Usuario_C<<endl;
	cout<<"\n";
	}

	if(Aceptado==true)
	{	cin.ignore();
		cout<<"Crea un Password"<<endl;
		getline(cin,User[Reg].Password_C);
		Guardar<<"Password: "<<User[Reg].Password_C<<endl;
	}

	
}

void Datos_Personales(Datos_Paciente User_Datos[],int Reg)
{cout<<"\n\n";	
	cin.ignore();
	User_Datos[Reg].Registro=Reg;
	cout<<"Ingrese los Datos del Paciente/Asegurado:"<<endl;
	cout<<"Nombre(s):"<<endl;
	getline(cin,User_Datos[Reg].Nombre);cout<<endl;
	Guardar<<"Nombre(s): "<<User_Datos[Reg].Nombre<<endl;
	cout<<"Apellido(s):"<<endl;
	getline(cin,User_Datos[Reg].Apellido);cout<<endl;
	Guardar<<"Apellidos: "<<User_Datos[Reg].Apellido<<endl;
	cout<<"Ingrese Edad:"<<endl;
	cin>>User_Datos[Reg].Edad;
	Guardar<<"Edad: "<<User_Datos[Reg].Edad<<" aÃ±os"<<endl;

}

void Datos_Extras(Datos_Adicionales User_AdDatos[],int Reg)
{cout<<"\n\n";
	cin.ignore();
	cout<<"Ingrese el CI: ";
	getline(cin, User_AdDatos[Reg].Carnet);
	Guardar<<"CI: "<<User_AdDatos[Reg].Carnet<<" ";
	cout<<" Expedido en: ";
	getline(cin,User_AdDatos[Reg].EXP);
	Guardar<<User_AdDatos[Reg].EXP<<endl;
	cout<<"Ingrese la Direccion: ";
	getline(cin,User_AdDatos[Reg].Direccion);cout<<"\n";
	Guardar<<"Direccion: "<<User_AdDatos[Reg].Direccion<<endl;
	cout<<"Ingrese el Correo Electronico: ";
	getline(cin,User_AdDatos[Reg].Correo_Electronico);cout<<"\n";
	Guardar<<"Correo ElectrÃ³nico: "<<User_AdDatos[Reg].Correo_Electronico<<endl;
	cout<<"Ingrese el numero de Telefono: ";
	cin>>User_AdDatos[Reg].Telefono;
	Guardar<<"Telefono: "<<User_AdDatos[Reg].Telefono<<endl;
	cout<<"Ingrese el numero de Celular: ";
	cin>>User_AdDatos[Reg].Celular;cout<<"\n";
	Guardar<<"Celular: "<<User_AdDatos[Reg].Celular<<endl;
	cin.ignore();
	cout<<"Ingrese Ocupacion: ";
	getline(cin,User_AdDatos[Reg].Centro_Trabajo_Estudio);cout<<"\n";
	Guardar<<"OcupaciÃ³n: "<<User_AdDatos[Reg].Centro_Trabajo_Estudio<<endl<<endl;
}

void Mostrar_Usuario(Usuario_ContraseÃ±a_Asegurado User[],Datos_Paciente User_Datos[],Datos_Adicionales User_AdDatos[],int cod){
	cout<<"Usuario: "<<User[cod].Usuario_C<<endl;
	cout<<"Password: "<<User[cod].Password_C<<endl;
	cout<<"\n\n";
	cout<<"Datos del Paciente/Asegurado:"<<endl;
	cout<<"Nombre(s):"<<User_Datos[cod].Nombre<<endl;
	cout<<"Apellido(s):"<<User_Datos[cod].Apellido<<endl;
	cout<<"Edad:"<<User_Datos[cod].Edad<<endl;
	cout<<"CI: "<<User_AdDatos[cod].Carnet<<endl;
	cout<<" Expedido en: "<<User_AdDatos[cod].EXP<<endl;
	cout<<"\n";
	cout<<"Direccion: "<<User_AdDatos[cod].Direccion<<endl;
	cout<<"Correo Electronico: "<<User_AdDatos[cod].Correo_Electronico<<endl;
	cout<<"numero de Telefono: "<<User_AdDatos[cod].Telefono<<endl;
	cout<<"numero de Celular: "<<User_AdDatos[cod].Celular<<endl;
	cout<<"Ingrese Ocupacion: "<<User_AdDatos[cod].Centro_Trabajo_Estudio<<endl;
	_getch();
}
